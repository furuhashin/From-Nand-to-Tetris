// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load==1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000-0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // 2^14=16384=これがRAMにアドレス領域(0~16383)
    // 2^13=8192
    // 16384~24575がスクリーンマップ用のアドレス領域
    // 24576がキーボード用のアドレス領域
    // 0[0][0]0000000000000
    // load-ram1は変数名
    DMux4Way(in=load,sel[0]=address[13],sel[1]=address[14],a=load-ram1,b=load-ram2,c=load-screen,d=load-keyboard);
    Or(a=load-ram1,b=load-ram2,out=load-ram);
    RAM16K(in=in,address=address[0..13],load=load-ram,out=out-ram); // addressが0~16383の場合メモリにアクセス
    // address[14]の最大数は16383
    Screen(in=in,load=load-screen,address=address[0..12],out=out-screen); // addressが16384~24576の範囲場合スクリーンのメモリマップにアクセス
    // スクリーンは最大で2^12+2^11+...=8191
    Keyboard(out=out-keyboard); // キーボード領域に保存
    Mux4Way16(a=out-ram,b=out-ram,c=out-screen,d=out-keyboard,sel[0]=address[13],sel[1]=address[14],out=out);
}